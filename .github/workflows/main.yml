# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get PoB Release information
        id: last_release
        uses: thebritican/fetch-latest-release@v2.0.0
        with:
          repo_path: "PathOfBuildingCommunity/PathOfBuilding"
          
      - name: Set PoB Version only numbers
        run: |
          str=${{ steps.last_release.outputs.tag_name }}
          echo POB_TAG=$(echo ${str:1}) >> $GITHUB_ENV

      - name: "Print result"
        run: |
          echo "url: ${{ steps.last_release.outputs.url }}"
          echo "assets_url: ${{ steps.last_release.outputs.assets_url }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "body: ${{ steps.last_release.outputs.body }}"
          echo "draft: ${{ steps.last_release.outputs.draft }}"
          echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"
          echo "pobtag: ${{ env.POB_TAG }}"

      # Add PoB
      - name: Add PoB files
        uses: robinraju/release-downloader@v1.3
        with:
          repository: "PathOfBuildingCommunity/PathOfBuilding"
          latest: true
          fileName: "PathOfBuildingCommunity-Portable-${{ POB_TAG }}.zip"
          
      - name: PoB unzip
        run: |
          unzip PathOfBuilding*.zip
          
      - name: PoB Directory modify
        run: |
          ls -al
          dirs=(PathOfBuilding*/)
          mv ${dirs[0]} PathOfBuildingCommunity
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'PoeCharm_v${{ steps.date.outputs.date }}.zip'
          exclusions: '*.git* PathOfBuilding*.zip'
          
      - name: zip file release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "PoeCharm_v${{ steps.date.outputs.date }}.zip"
          tag: "v${{ steps.date.outputs.date }}"
          token: ${{ secrets.GITHUB_TOKEN }}
